{"id":"7tMV","dependencies":[{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/package.json","includedInParent":true,"mtime":1572035175430},{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/.babelrc","includedInParent":true,"mtime":1572035440174},{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/package.json","includedInParent":true,"mtime":1571074066777},{"name":"../math/Vec3","loc":{"line":3,"column":19},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/GSSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/math/Vec3.js"},{"name":"../math/Quaternion","loc":{"line":4,"column":25},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/GSSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/math/Quaternion.js"},{"name":"./Solver","loc":{"line":5,"column":21},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/GSSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/Solver.js"}],"generated":{"js":"module.exports = GSSolver;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('./Solver');\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @class GSSolver\n * @constructor\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @author schteppe / https://github.com/schteppe\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n * @extends Solver\n */\nfunction GSSolver(){\n    Solver.call(this);\n\n    /**\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n     * @property iterations\n     * @type {Number}\n     * @todo write more about solver and iterations in the wiki\n     */\n    this.iterations = 10;\n\n    /**\n     * When tolerance is reached, the system is assumed to be converged.\n     * @property tolerance\n     * @type {Number}\n     */\n    this.tolerance = 1e-7;\n}\nGSSolver.prototype = new Solver();\n\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\nvar GSSolver_solve_invCs = [];\nvar GSSolver_solve_Bs = [];\nGSSolver.prototype.solve = function(dt,world){\n    var iter = 0,\n        maxIter = this.iterations,\n        tolSquared = this.tolerance*this.tolerance,\n        equations = this.equations,\n        Neq = equations.length,\n        bodies = world.bodies,\n        Nbodies = bodies.length,\n        h = dt,\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\n\n    // Update solve mass\n    if(Neq !== 0){\n        for(var i=0; i!==Nbodies; i++){\n            bodies[i].updateSolveMassProperties();\n        }\n    }\n\n    // Things that does not change during iteration can be computed once\n    var invCs = GSSolver_solve_invCs,\n        Bs = GSSolver_solve_Bs,\n        lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n    for(var i=0; i!==Neq; i++){\n        var c = equations[i];\n        lambda[i] = 0.0;\n        Bs[i] = c.computeB(h);\n        invCs[i] = 1.0 / c.computeC();\n    }\n\n    if(Neq !== 0){\n\n        // Reset vlambda\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                vlambda=b.vlambda,\n                wlambda=b.wlambda;\n            vlambda.set(0,0,0);\n            wlambda.set(0,0,0);\n        }\n\n        // Iterate over equations\n        for(iter=0; iter!==maxIter; iter++){\n\n            // Accumulate the total error for each iteration.\n            deltalambdaTot = 0.0;\n\n            for(var j=0; j!==Neq; j++){\n\n                var c = equations[j];\n\n                // Compute iteration\n                B = Bs[j];\n                invC = invCs[j];\n                lambdaj = lambda[j];\n                GWlambda = c.computeGWlambda();\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\n\n                // Clamp if we are not within the min/max interval\n                if(lambdaj + deltalambda < c.minForce){\n                    deltalambda = c.minForce - lambdaj;\n                } else if(lambdaj + deltalambda > c.maxForce){\n                    deltalambda = c.maxForce - lambdaj;\n                }\n                lambda[j] += deltalambda;\n\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n                c.addToWlambda(deltalambda);\n            }\n\n            // If the total error is small enough - stop iterate\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\n                break;\n            }\n        }\n\n        // Add result to velocity\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                v=b.velocity,\n                w=b.angularVelocity;\n\n            b.vlambda.vmul(b.linearFactor, b.vlambda);\n            v.vadd(b.vlambda, v);\n\n            b.wlambda.vmul(b.angularFactor, b.wlambda);\n            w.vadd(b.wlambda, w);\n        }\n\n        // Set the .multiplier property of each equation\n        var l = equations.length;\n        var invDt = 1 / h;\n        while(l--){\n            equations[l].multiplier = lambda[l] * invDt;\n        }\n    }\n\n    return iter;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/cannon/src/solver/GSSolver.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}}],"sources":{"../node_modules/cannon/src/solver/GSSolver.js":"module.exports = GSSolver;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('./Solver');\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @class GSSolver\n * @constructor\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @author schteppe / https://github.com/schteppe\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n * @extends Solver\n */\nfunction GSSolver(){\n    Solver.call(this);\n\n    /**\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n     * @property iterations\n     * @type {Number}\n     * @todo write more about solver and iterations in the wiki\n     */\n    this.iterations = 10;\n\n    /**\n     * When tolerance is reached, the system is assumed to be converged.\n     * @property tolerance\n     * @type {Number}\n     */\n    this.tolerance = 1e-7;\n}\nGSSolver.prototype = new Solver();\n\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\nvar GSSolver_solve_invCs = [];\nvar GSSolver_solve_Bs = [];\nGSSolver.prototype.solve = function(dt,world){\n    var iter = 0,\n        maxIter = this.iterations,\n        tolSquared = this.tolerance*this.tolerance,\n        equations = this.equations,\n        Neq = equations.length,\n        bodies = world.bodies,\n        Nbodies = bodies.length,\n        h = dt,\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\n\n    // Update solve mass\n    if(Neq !== 0){\n        for(var i=0; i!==Nbodies; i++){\n            bodies[i].updateSolveMassProperties();\n        }\n    }\n\n    // Things that does not change during iteration can be computed once\n    var invCs = GSSolver_solve_invCs,\n        Bs = GSSolver_solve_Bs,\n        lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n    for(var i=0; i!==Neq; i++){\n        var c = equations[i];\n        lambda[i] = 0.0;\n        Bs[i] = c.computeB(h);\n        invCs[i] = 1.0 / c.computeC();\n    }\n\n    if(Neq !== 0){\n\n        // Reset vlambda\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                vlambda=b.vlambda,\n                wlambda=b.wlambda;\n            vlambda.set(0,0,0);\n            wlambda.set(0,0,0);\n        }\n\n        // Iterate over equations\n        for(iter=0; iter!==maxIter; iter++){\n\n            // Accumulate the total error for each iteration.\n            deltalambdaTot = 0.0;\n\n            for(var j=0; j!==Neq; j++){\n\n                var c = equations[j];\n\n                // Compute iteration\n                B = Bs[j];\n                invC = invCs[j];\n                lambdaj = lambda[j];\n                GWlambda = c.computeGWlambda();\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\n\n                // Clamp if we are not within the min/max interval\n                if(lambdaj + deltalambda < c.minForce){\n                    deltalambda = c.minForce - lambdaj;\n                } else if(lambdaj + deltalambda > c.maxForce){\n                    deltalambda = c.maxForce - lambdaj;\n                }\n                lambda[j] += deltalambda;\n\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n                c.addToWlambda(deltalambda);\n            }\n\n            // If the total error is small enough - stop iterate\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\n                break;\n            }\n        }\n\n        // Add result to velocity\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                v=b.velocity,\n                w=b.angularVelocity;\n\n            b.vlambda.vmul(b.linearFactor, b.vlambda);\n            v.vadd(b.vlambda, v);\n\n            b.wlambda.vmul(b.angularFactor, b.wlambda);\n            w.vadd(b.wlambda, w);\n        }\n\n        // Set the .multiplier property of each equation\n        var l = equations.length;\n        var invDt = 1 / h;\n        while(l--){\n            equations[l].multiplier = lambda[l] * invDt;\n        }\n    }\n\n    return iter;\n};\n"},"lineCount":141}},"error":null,"hash":"d9c24c1c9b2865ba9d1cb095b0c37a21","cacheData":{"env":{}}}