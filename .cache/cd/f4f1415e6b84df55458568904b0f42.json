{"id":"xpJg","dependencies":[{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/package.json","includedInParent":true,"mtime":1571074916167},{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/package.json","includedInParent":true,"mtime":1571074066777},{"name":"./Constraint","loc":{"line":3,"column":25},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/constraints/DistanceConstraint.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/constraints/Constraint.js"},{"name":"../equations/ContactEquation","loc":{"line":4,"column":30},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/constraints/DistanceConstraint.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/equations/ContactEquation.js"}],"generated":{"js":"module.exports = DistanceConstraint;\n\nvar Constraint = require('./Constraint');\nvar ContactEquation = require('../equations/ContactEquation');\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n * @class DistanceConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n * @param {Number} [maxForce=1e6]\n * @extends Constraint\n */\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    if(typeof(distance)===\"undefined\") {\n        distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    if(typeof(maxForce)===\"undefined\") {\n        maxForce = 1e6;\n    }\n\n    /**\n     * @property {number} distance\n     */\n    this.distance = distance;\n\n    /**\n     * @property {ContactEquation} distanceEquation\n     */\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq);\n\n    // Make it bidirectional\n    eq.minForce = -maxForce;\n    eq.maxForce =  maxForce;\n}\nDistanceConstraint.prototype = new Constraint();\n\nDistanceConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var eq = this.distanceEquation;\n    var halfDist = this.distance * 0.5;\n    var normal = eq.ni;\n\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.mult(halfDist, eq.ri);\n    normal.mult(-halfDist, eq.rj);\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cannon/src/constraints/DistanceConstraint.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"../node_modules/cannon/src/constraints/DistanceConstraint.js":"module.exports = DistanceConstraint;\n\nvar Constraint = require('./Constraint');\nvar ContactEquation = require('../equations/ContactEquation');\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n * @class DistanceConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n * @param {Number} [maxForce=1e6]\n * @extends Constraint\n */\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    if(typeof(distance)===\"undefined\") {\n        distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    if(typeof(maxForce)===\"undefined\") {\n        maxForce = 1e6;\n    }\n\n    /**\n     * @property {number} distance\n     */\n    this.distance = distance;\n\n    /**\n     * @property {ContactEquation} distanceEquation\n     */\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq);\n\n    // Make it bidirectional\n    eq.minForce = -maxForce;\n    eq.maxForce =  maxForce;\n}\nDistanceConstraint.prototype = new Constraint();\n\nDistanceConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var eq = this.distanceEquation;\n    var halfDist = this.distance * 0.5;\n    var normal = eq.ni;\n\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.mult(halfDist, eq.ri);\n    normal.mult(-halfDist, eq.rj);\n};"},"lineCount":56}},"error":null,"hash":"58cd4f9b414599cbf3fd7ca9142bb335","cacheData":{"env":{}}}