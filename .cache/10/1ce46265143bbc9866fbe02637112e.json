{"id":"p55F","dependencies":[{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/package.json","includedInParent":true,"mtime":1571074916167},{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/package.json","includedInParent":true,"mtime":1571074066777},{"name":"../collision/AABB","loc":{"line":1,"column":19},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/utils/Octree.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/collision/AABB.js"},{"name":"../math/Vec3","loc":{"line":2,"column":19},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/utils/Octree.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/math/Vec3.js"}],"generated":{"js":"var AABB = require('../collision/AABB');\nvar Vec3 = require('../math/Vec3');\n\nmodule.exports = Octree;\n\n/**\n * @class OctreeNode\n * @param {object} [options]\n * @param {Octree} [options.root]\n * @param {AABB} [options.aabb]\n */\nfunction OctreeNode(options){\n    options = options || {};\n\n    /**\n     * The root node\n     * @property {OctreeNode} root\n     */\n    this.root = options.root || null;\n\n    /**\n     * Boundary of this node\n     * @property {AABB} aabb\n     */\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n\n    /**\n     * Contained data at the current node level.\n     * @property {Array} data\n     */\n    this.data = [];\n\n    /**\n     * Children to this node\n     * @property {Array} children\n     */\n    this.children = [];\n}\n\n/**\n * @class Octree\n * @param {AABB} aabb The total AABB of the tree\n * @param {object} [options]\n * @param {number} [options.maxDepth=8]\n * @extends OctreeNode\n */\nfunction Octree(aabb, options){\n    options = options || {};\n    options.root = null;\n    options.aabb = aabb;\n    OctreeNode.call(this, options);\n\n    /**\n     * Maximum subdivision depth\n     * @property {number} maxDepth\n     */\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\n}\nOctree.prototype = new OctreeNode();\n\nOctreeNode.prototype.reset = function(aabb, options){\n    this.children.length = this.data.length = 0;\n};\n\n/**\n * Insert data into this node\n * @method insert\n * @param  {AABB} aabb\n * @param  {object} elementData\n * @return {boolean} True if successful, otherwise false\n */\nOctreeNode.prototype.insert = function(aabb, elementData, level){\n    var nodeData = this.data;\n    level = level || 0;\n\n    // Ignore objects that do not belong in this node\n    if (!this.aabb.contains(aabb)){\n        return false; // object cannot be added\n    }\n\n    var children = this.children;\n\n    if(level < (this.maxDepth || this.root.maxDepth)){\n        // Subdivide if there are no children yet\n        var subdivided = false;\n        if (!children.length){\n            this.subdivide();\n            subdivided = true;\n        }\n\n        // add to whichever node will accept it\n        for (var i = 0; i !== 8; i++) {\n            if (children[i].insert(aabb, elementData, level + 1)){\n                return true;\n            }\n        }\n\n        if(subdivided){\n            // No children accepted! Might as well just remove em since they contain none\n            children.length = 0;\n        }\n    }\n\n    // Too deep, or children didnt want it. add it in current node\n    nodeData.push(elementData);\n\n    return true;\n};\n\nvar halfDiagonal = new Vec3();\n\n/**\n * Create 8 equally sized children nodes and put them in the .children array.\n * @method subdivide\n */\nOctreeNode.prototype.subdivide = function() {\n    var aabb = this.aabb;\n    var l = aabb.lowerBound;\n    var u = aabb.upperBound;\n\n    var children = this.children;\n\n    children.push(\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\n    );\n\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n\n    var root = this.root || this;\n\n    for (var i = 0; i !== 8; i++) {\n        var child = children[i];\n\n        // Set current node as root\n        child.root = root;\n\n        // Compute bounds\n        var lowerBound = child.aabb.lowerBound;\n        lowerBound.x *= halfDiagonal.x;\n        lowerBound.y *= halfDiagonal.y;\n        lowerBound.z *= halfDiagonal.z;\n\n        lowerBound.vadd(l, lowerBound);\n\n        // Upper bound is always lower bound + halfDiagonal\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n};\n\n/**\n * Get all data, potentially within an AABB\n * @method aabbQuery\n * @param  {AABB} aabb\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\n\n    var nodeData = this.data;\n\n    // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n    var children = this.children;\n\n\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        if (node.aabb.overlaps(aabb)){\n            Array.prototype.push.apply(result, node.data);\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Get all data, potentially intersected by a ray.\n * @method rayQuery\n * @param  {Ray} ray\n * @param  {Transform} treeTransform\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\n\n    // Use aabb query for now.\n    // @todo implement real ray query which needs less lookups\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n\n    return result;\n};\n\n/**\n * @method removeEmptyNodes\n */\nOctreeNode.prototype.removeEmptyNodes = function() {\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        for (var i = node.children.length - 1; i >= 0; i--) {\n            if(!node.children[i].data.length){\n                node.children.splice(i, 1);\n            }\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/cannon/src/utils/Octree.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}}],"sources":{"../node_modules/cannon/src/utils/Octree.js":"var AABB = require('../collision/AABB');\nvar Vec3 = require('../math/Vec3');\n\nmodule.exports = Octree;\n\n/**\n * @class OctreeNode\n * @param {object} [options]\n * @param {Octree} [options.root]\n * @param {AABB} [options.aabb]\n */\nfunction OctreeNode(options){\n    options = options || {};\n\n    /**\n     * The root node\n     * @property {OctreeNode} root\n     */\n    this.root = options.root || null;\n\n    /**\n     * Boundary of this node\n     * @property {AABB} aabb\n     */\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n\n    /**\n     * Contained data at the current node level.\n     * @property {Array} data\n     */\n    this.data = [];\n\n    /**\n     * Children to this node\n     * @property {Array} children\n     */\n    this.children = [];\n}\n\n/**\n * @class Octree\n * @param {AABB} aabb The total AABB of the tree\n * @param {object} [options]\n * @param {number} [options.maxDepth=8]\n * @extends OctreeNode\n */\nfunction Octree(aabb, options){\n    options = options || {};\n    options.root = null;\n    options.aabb = aabb;\n    OctreeNode.call(this, options);\n\n    /**\n     * Maximum subdivision depth\n     * @property {number} maxDepth\n     */\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\n}\nOctree.prototype = new OctreeNode();\n\nOctreeNode.prototype.reset = function(aabb, options){\n    this.children.length = this.data.length = 0;\n};\n\n/**\n * Insert data into this node\n * @method insert\n * @param  {AABB} aabb\n * @param  {object} elementData\n * @return {boolean} True if successful, otherwise false\n */\nOctreeNode.prototype.insert = function(aabb, elementData, level){\n    var nodeData = this.data;\n    level = level || 0;\n\n    // Ignore objects that do not belong in this node\n    if (!this.aabb.contains(aabb)){\n        return false; // object cannot be added\n    }\n\n    var children = this.children;\n\n    if(level < (this.maxDepth || this.root.maxDepth)){\n        // Subdivide if there are no children yet\n        var subdivided = false;\n        if (!children.length){\n            this.subdivide();\n            subdivided = true;\n        }\n\n        // add to whichever node will accept it\n        for (var i = 0; i !== 8; i++) {\n            if (children[i].insert(aabb, elementData, level + 1)){\n                return true;\n            }\n        }\n\n        if(subdivided){\n            // No children accepted! Might as well just remove em since they contain none\n            children.length = 0;\n        }\n    }\n\n    // Too deep, or children didnt want it. add it in current node\n    nodeData.push(elementData);\n\n    return true;\n};\n\nvar halfDiagonal = new Vec3();\n\n/**\n * Create 8 equally sized children nodes and put them in the .children array.\n * @method subdivide\n */\nOctreeNode.prototype.subdivide = function() {\n    var aabb = this.aabb;\n    var l = aabb.lowerBound;\n    var u = aabb.upperBound;\n\n    var children = this.children;\n\n    children.push(\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\n    );\n\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n\n    var root = this.root || this;\n\n    for (var i = 0; i !== 8; i++) {\n        var child = children[i];\n\n        // Set current node as root\n        child.root = root;\n\n        // Compute bounds\n        var lowerBound = child.aabb.lowerBound;\n        lowerBound.x *= halfDiagonal.x;\n        lowerBound.y *= halfDiagonal.y;\n        lowerBound.z *= halfDiagonal.z;\n\n        lowerBound.vadd(l, lowerBound);\n\n        // Upper bound is always lower bound + halfDiagonal\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n};\n\n/**\n * Get all data, potentially within an AABB\n * @method aabbQuery\n * @param  {AABB} aabb\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\n\n    var nodeData = this.data;\n\n    // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n    var children = this.children;\n\n\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        if (node.aabb.overlaps(aabb)){\n            Array.prototype.push.apply(result, node.data);\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Get all data, potentially intersected by a ray.\n * @method rayQuery\n * @param  {Ray} ray\n * @param  {Transform} treeTransform\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\n\n    // Use aabb query for now.\n    // @todo implement real ray query which needs less lookups\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n\n    return result;\n};\n\n/**\n * @method removeEmptyNodes\n */\nOctreeNode.prototype.removeEmptyNodes = function() {\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        for (var i = node.children.length - 1; i >= 0; i--) {\n            if(!node.children[i].data.length){\n                node.children.splice(i, 1);\n            }\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n};\n"},"lineCount":234}},"error":null,"hash":"2dcbda108c6a7ecf5508f69521a25803","cacheData":{"env":{}}}