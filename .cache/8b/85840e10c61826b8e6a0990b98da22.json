{"id":"Focm","dependencies":[{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/package.json","includedInParent":true,"mtime":1571074355151}],"generated":{"js":"// export class CannonHelper {\n//   constructor(worldObjects) {\n//     this.ShapeTypes = {\n//       SPHERE: 1,\n//       PLANE: 2,\n//       BOX: 4,\n//       COMPOUND: 8,\n//       CONVEXPOLYHEDRON: 16,\n//       HEIGHTFIELD: 32,\n//       PARTICLE: 64,\n//       CYLINDER: 128,\n//       TRIMESH: 256\n//     }\n//     // consts for stepping through time in the sim\n//     this.fixedTimeStep = 1.0 / 30.0 // seconds\n//     this.maxSubSteps = 3\n//     this.groundMaterial = new CANNON.Material()\n//     // pass them in at the beginning?\n//     this.worldObjects = worldObjects\n//     // Init our world\n//     this.world = new CANNON.World()\n//     // expose the original cannon object for static methods\n//     this.CANNON = CANNON\n//     // set the gravity\n//     this.world.gravity.set(0, -29.82, 0) // m/sÂ²\n//     // set up the initial objects\n//     this.worldObjects.forEach((worldObject, i) => {\n//       // attempt to boost performance by making sleeping more agressive\n//       // worldObject.physicsObject.sleepSpeedLimit = 1.0\n//       // add the body to the world\n//       // this.worldObjects[i].physicsObject = this.world.addBody(worldObject.physicsObject)\n//       this.world.addBody(worldObject.physicsObject)\n//       // save the transform for later\n//       // using getTransform everywhere seemed to have a performance hit\n//       worldObject.transform = worldObject.sceneObject.getTransform()\n//       // sync the scale initially so that everything matches\n//       this.syncScale(this.worldObjects[i].transform, this.worldObjects[i].physicsObject)\n//       // if (this.groundBody && this.worldObjects[i].physicsObject) {\n//       //   print('here')\n//       //   var contactMat = new CANNON.ContactMaterial(this.groundBody.material, worldObject.physicsObject.material, {\n//       //     friction: 0.0,\n//       //     restitution: 0.7\n//       //   })\n//       //   this.world.addContactMaterial(contactMat)\n//       // }\n//     })\n//     // TEST CONTACT MATERIAL\n//     // var contactMat = new CANNON.ContactMaterial(\n//     //   this.worldObjects[0].physicsObject.material,\n//     //   this.worldObjects[1].physicsObject.material,\n//     //   {\n//     //     friction: 0.0,\n//     //     restitution: 0.7\n//     //   }\n//     // )\n//     // this.world.addContactMaterial(contactMat)\n//   }\n//   bodyPos(cannonBody) {\n//     return new vec3(cannonBody.position.x, cannonBody.position.y, cannonBody.position.z)\n//   }\n//   // return the scale/size of a physics object\n//   // use for scaling a sceneObject to match the physics world\n//   bodyScale(cannonBody) {\n//     const shape = cannonBody.shapes[0]\n//     // // TODO: change to switch to support more shapes\n//     // if (shape.type == this.ShapeTypes.SPHERE) return new vec3(shape.radius, shape.radius, shape.radius)\n//     // // the plane type seems to have no size\n//     // else if (shape.type == this.ShapeTypes.PLANE) return new vec3(10, 10, 10)\n//     switch (shape.type) {\n//       case this.ShapeTypes.SPHERE:\n//         return new vec3(shape.radius, shape.radius, shape.radius)\n//         break\n//       case this.ShapeTypes.PLANE:\n//         return new vec3(10, 10, 10)\n//         break\n//       case this.ShapeTypes.BOX:\n//       default:\n//         const size = shape.halfExtents\n//         return new vec3(size.x / 8, size.y / 8, size.z / 8)\n//         break\n//     }\n//   }\n//   bodyRot(cannonBody) {\n//     var rot = cannonBody.quaternion\n//     transform.setWorldRotation(new quat(rot.w, rot.x, rot.y, rot.z))\n//   }\n//   addWorldObject(worldObject) {\n//     this.world.addBody(worldObject.physicsObject)\n//     worldObject.transform = worldObject.sceneObject.getTransform()\n//     // sync the scale initially so that everything matches\n//     this.worldObjects.push(worldObject)\n//     this.syncScale(worldObject.transform, worldObject.physicsObject)\n//   }\n//   syncPos(transform, cannonBody) {\n//     // var transform = sceneObject.getTransform()\n//     var newPos = this.bodyPos(cannonBody)\n//     transform.setWorldPosition(newPos)\n//     var rot = cannonBody.quaternion\n//     transform.setWorldRotation(new quat(rot.w, rot.x, rot.y, rot.z))\n//   }\n//   syncScale(transform, cannonBody) {\n//     // const transform = sceneObject.getTransform()\n//     const physicsSize = this.bodyScale(cannonBody)\n//     transform.setWorldScale(physicsSize)\n//   }\n//   update() {\n//     // step the sim, can just take fixed time\n//     // this.world.step(this.fixedTimeStep, getDeltaTime(), this.maxSubSteps)\n//     this.world.step(global.getDeltaTime())\n//     // for loop faster, really worth it?\n//     for (var i = 0; i < this.worldObjects.length; i++) {\n//       // const element = array[i];\n//       this.syncPos(this.worldObjects[i].transform, this.worldObjects[i].physicsObject)\n//     }\n//     // this.worldObjects.forEach(worldObject => {\n//     //   this.syncPos(worldObject.transform, worldObject.physicsObject)\n//     // })\n//   }\n//   // sync from snap -> cannon\n//   syncSceneObject(transform, cannonBody) {\n//     // var transform = sceneObject.getTransform()\n//     var pos = transform.getWorldPosition()\n//     var rot = transform.getWorldRotation()\n//     //   var newPlayerPos = new CANNON.Vec3(pos.x, pos.y, pos.z)\n//     // XXX: probably a pretty bad way of syncing\n//     // might be better to add velocity towards the desired point\n//     cannonBody.position.set(pos.x, pos.y, pos.z)\n//     cannonBody.quaternion.set(rot.x, rot.z, rot.y, rot.w)\n//     cannonBody.velocity = new CANNON.Vec3(0, 0, 0)\n//     cannonBody.torque = new CANNON.Vec3(0, 0, 0)\n//     // cannonBody.type = CANNON.Body.STATIC\n//     //   cannonBody.position.set(pos.x, pos.z * -1, pos.y)\n//   }\n//   static makeBox(size, position, rotation) {\n//     var mat = new CANNON.Material()\n//     return new CANNON.Body({\n//       mass: 1,\n//       position: new CANNON.Vec3(position.x, position.y, position.z),\n//       shape: new CANNON.Box(new CANNON.Vec3(size.x, size.y, size.z)),\n//       // if no rotation on W set something, seems to stall if nothing is set!\n//       quaternion: new CANNON.Quaternion(rotation.x, rotation.y, rotation.z, rotation.w || 0.5),\n//       // quaternion: new CANNON.Quaternion(rotation.x || 0.5, rotation.y || 0.5, rotation.z || 0.5, rotation.w || 0.5),\n//       material: mat\n//       // DYNAMIC: 1\n//       // fixedRotation: true\n//       // linearDamping: 0.1,\n//       // angularDamping: 0.5\n//     })\n//   }\n//   static makeSphere(size, position, rotation) {\n//     var mat = new CANNON.Material()\n//     return new CANNON.Body({\n//       mass: 1,\n//       // position: new CANNON.Vec3(0, 10, -10),\n//       // shape: new CANNON.Sphere(12)\n//       position: new CANNON.Vec3(position.x, position.y, position.z),\n//       shape: new CANNON.Sphere(size.x),\n//       material: mat\n//       // DYNAMIC: 1\n//       // fixedRotation: true\n//       // linearDamping: 0.1,\n//       // angularDamping: 0.5\n//     })\n//   }\n//   static makeFloor(size, position, rotation) {\n//     var mat = new CANNON.Material()\n//     // ground planes seem to be infinite in size...\n//     // var groundShape = new CANNON.Plane()\n//     const groundShape = new CANNON.Box(new CANNON.Vec3(1000, 1000, 1))\n//     var groundBody = new CANNON.Body({\n//       mass: 0, // mass == 0 makes the body static\n//       material: mat,\n//       shape: groundShape\n//     })\n//     groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n//     return groundBody\n//   }\n// }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":22,"column":0}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":24,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":25,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":27,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":28,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":30,"column":0}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":31,"column":0}},{"generated":{"line":26,"column":0},"source":"index.js","original":{"line":33,"column":0}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":34,"column":0}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":35,"column":0}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":36,"column":0}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":39,"column":0}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":40,"column":0}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":42,"column":0}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":43,"column":0}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":44,"column":0}},{"generated":{"line":36,"column":0},"source":"index.js","original":{"line":46,"column":0}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":47,"column":0}},{"generated":{"line":38,"column":0},"source":"index.js","original":{"line":49,"column":0}},{"generated":{"line":39,"column":0},"source":"index.js","original":{"line":50,"column":0}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":51,"column":0}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":52,"column":0}},{"generated":{"line":42,"column":0},"source":"index.js","original":{"line":53,"column":0}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":54,"column":0}},{"generated":{"line":44,"column":0},"source":"index.js","original":{"line":55,"column":0}},{"generated":{"line":45,"column":0},"source":"index.js","original":{"line":56,"column":0}},{"generated":{"line":46,"column":0},"source":"index.js","original":{"line":57,"column":0}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":59,"column":0}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":60,"column":0}},{"generated":{"line":49,"column":0},"source":"index.js","original":{"line":61,"column":0}},{"generated":{"line":50,"column":0},"source":"index.js","original":{"line":62,"column":0}},{"generated":{"line":51,"column":0},"source":"index.js","original":{"line":63,"column":0}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":64,"column":0}},{"generated":{"line":53,"column":0},"source":"index.js","original":{"line":65,"column":0}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":66,"column":0}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":67,"column":0}},{"generated":{"line":56,"column":0},"source":"index.js","original":{"line":68,"column":0}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":69,"column":0}},{"generated":{"line":58,"column":0},"source":"index.js","original":{"line":71,"column":0}},{"generated":{"line":59,"column":0},"source":"index.js","original":{"line":72,"column":0}},{"generated":{"line":60,"column":0},"source":"index.js","original":{"line":73,"column":0}},{"generated":{"line":61,"column":0},"source":"index.js","original":{"line":75,"column":0}},{"generated":{"line":62,"column":0},"source":"index.js","original":{"line":76,"column":0}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":77,"column":0}},{"generated":{"line":64,"column":0},"source":"index.js","original":{"line":78,"column":0}},{"generated":{"line":65,"column":0},"source":"index.js","original":{"line":80,"column":0}},{"generated":{"line":66,"column":0},"source":"index.js","original":{"line":81,"column":0}},{"generated":{"line":67,"column":0},"source":"index.js","original":{"line":82,"column":0}},{"generated":{"line":68,"column":0},"source":"index.js","original":{"line":83,"column":0}},{"generated":{"line":69,"column":0},"source":"index.js","original":{"line":85,"column":0}},{"generated":{"line":70,"column":0},"source":"index.js","original":{"line":86,"column":0}},{"generated":{"line":71,"column":0},"source":"index.js","original":{"line":87,"column":0}},{"generated":{"line":72,"column":0},"source":"index.js","original":{"line":88,"column":0}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":89,"column":0}},{"generated":{"line":74,"column":0},"source":"index.js","original":{"line":90,"column":0}},{"generated":{"line":75,"column":0},"source":"index.js","original":{"line":91,"column":0}},{"generated":{"line":76,"column":0},"source":"index.js","original":{"line":93,"column":0}},{"generated":{"line":77,"column":0},"source":"index.js","original":{"line":94,"column":0}},{"generated":{"line":78,"column":0},"source":"index.js","original":{"line":95,"column":0}},{"generated":{"line":79,"column":0},"source":"index.js","original":{"line":97,"column":0}},{"generated":{"line":80,"column":0},"source":"index.js","original":{"line":98,"column":0}},{"generated":{"line":81,"column":0},"source":"index.js","original":{"line":99,"column":0}},{"generated":{"line":82,"column":0},"source":"index.js","original":{"line":100,"column":0}},{"generated":{"line":83,"column":0},"source":"index.js","original":{"line":102,"column":0}},{"generated":{"line":84,"column":0},"source":"index.js","original":{"line":103,"column":0}},{"generated":{"line":85,"column":0},"source":"index.js","original":{"line":104,"column":0}},{"generated":{"line":86,"column":0},"source":"index.js","original":{"line":105,"column":0}},{"generated":{"line":87,"column":0},"source":"index.js","original":{"line":107,"column":0}},{"generated":{"line":88,"column":0},"source":"index.js","original":{"line":108,"column":0}},{"generated":{"line":89,"column":0},"source":"index.js","original":{"line":110,"column":0}},{"generated":{"line":90,"column":0},"source":"index.js","original":{"line":112,"column":0}},{"generated":{"line":91,"column":0},"source":"index.js","original":{"line":113,"column":0}},{"generated":{"line":92,"column":0},"source":"index.js","original":{"line":115,"column":0}},{"generated":{"line":93,"column":0},"source":"index.js","original":{"line":116,"column":0}},{"generated":{"line":94,"column":0},"source":"index.js","original":{"line":118,"column":0}},{"generated":{"line":95,"column":0},"source":"index.js","original":{"line":119,"column":0}},{"generated":{"line":96,"column":0},"source":"index.js","original":{"line":120,"column":0}},{"generated":{"line":97,"column":0},"source":"index.js","original":{"line":121,"column":0}},{"generated":{"line":98,"column":0},"source":"index.js","original":{"line":123,"column":0}},{"generated":{"line":99,"column":0},"source":"index.js","original":{"line":124,"column":0}},{"generated":{"line":100,"column":0},"source":"index.js","original":{"line":125,"column":0}},{"generated":{"line":101,"column":0},"source":"index.js","original":{"line":127,"column":0}},{"generated":{"line":102,"column":0},"source":"index.js","original":{"line":128,"column":0}},{"generated":{"line":103,"column":0},"source":"index.js","original":{"line":129,"column":0}},{"generated":{"line":104,"column":0},"source":"index.js","original":{"line":130,"column":0}},{"generated":{"line":105,"column":0},"source":"index.js","original":{"line":131,"column":0}},{"generated":{"line":106,"column":0},"source":"index.js","original":{"line":133,"column":0}},{"generated":{"line":107,"column":0},"source":"index.js","original":{"line":134,"column":0}},{"generated":{"line":108,"column":0},"source":"index.js","original":{"line":135,"column":0}},{"generated":{"line":109,"column":0},"source":"index.js","original":{"line":137,"column":0}},{"generated":{"line":110,"column":0},"source":"index.js","original":{"line":139,"column":0}},{"generated":{"line":111,"column":0},"source":"index.js","original":{"line":140,"column":0}},{"generated":{"line":112,"column":0},"source":"index.js","original":{"line":141,"column":0}},{"generated":{"line":113,"column":0},"source":"index.js","original":{"line":142,"column":0}},{"generated":{"line":114,"column":0},"source":"index.js","original":{"line":143,"column":0}},{"generated":{"line":115,"column":0},"source":"index.js","original":{"line":144,"column":0}},{"generated":{"line":116,"column":0},"source":"index.js","original":{"line":145,"column":0}},{"generated":{"line":117,"column":0},"source":"index.js","original":{"line":146,"column":0}},{"generated":{"line":118,"column":0},"source":"index.js","original":{"line":147,"column":0}},{"generated":{"line":119,"column":0},"source":"index.js","original":{"line":149,"column":0}},{"generated":{"line":120,"column":0},"source":"index.js","original":{"line":150,"column":0}},{"generated":{"line":121,"column":0},"source":"index.js","original":{"line":151,"column":0}},{"generated":{"line":122,"column":0},"source":"index.js","original":{"line":152,"column":0}},{"generated":{"line":123,"column":0},"source":"index.js","original":{"line":153,"column":0}},{"generated":{"line":124,"column":0},"source":"index.js","original":{"line":155,"column":0}},{"generated":{"line":125,"column":0},"source":"index.js","original":{"line":157,"column":0}},{"generated":{"line":126,"column":0},"source":"index.js","original":{"line":158,"column":0}},{"generated":{"line":127,"column":0},"source":"index.js","original":{"line":159,"column":0}},{"generated":{"line":128,"column":0},"source":"index.js","original":{"line":160,"column":0}},{"generated":{"line":129,"column":0},"source":"index.js","original":{"line":161,"column":0}},{"generated":{"line":130,"column":0},"source":"index.js","original":{"line":162,"column":0}},{"generated":{"line":131,"column":0},"source":"index.js","original":{"line":163,"column":0}},{"generated":{"line":132,"column":0},"source":"index.js","original":{"line":164,"column":0}},{"generated":{"line":133,"column":0},"source":"index.js","original":{"line":165,"column":0}},{"generated":{"line":134,"column":0},"source":"index.js","original":{"line":167,"column":0}},{"generated":{"line":135,"column":0},"source":"index.js","original":{"line":168,"column":0}},{"generated":{"line":136,"column":0},"source":"index.js","original":{"line":170,"column":0}},{"generated":{"line":137,"column":0},"source":"index.js","original":{"line":171,"column":0}},{"generated":{"line":138,"column":0},"source":"index.js","original":{"line":172,"column":0}},{"generated":{"line":139,"column":0},"source":"index.js","original":{"line":173,"column":0}},{"generated":{"line":140,"column":0},"source":"index.js","original":{"line":174,"column":0}},{"generated":{"line":141,"column":0},"source":"index.js","original":{"line":175,"column":0}},{"generated":{"line":142,"column":0},"source":"index.js","original":{"line":176,"column":0}},{"generated":{"line":143,"column":0},"source":"index.js","original":{"line":177,"column":0}},{"generated":{"line":144,"column":0},"source":"index.js","original":{"line":178,"column":0}},{"generated":{"line":145,"column":0},"source":"index.js","original":{"line":179,"column":0}},{"generated":{"line":146,"column":0},"source":"index.js","original":{"line":180,"column":0}},{"generated":{"line":147,"column":0},"source":"index.js","original":{"line":181,"column":0}},{"generated":{"line":148,"column":0},"source":"index.js","original":{"line":182,"column":0}},{"generated":{"line":149,"column":0},"source":"index.js","original":{"line":183,"column":0}},{"generated":{"line":150,"column":0},"source":"index.js","original":{"line":185,"column":0}},{"generated":{"line":151,"column":0},"source":"index.js","original":{"line":186,"column":0}},{"generated":{"line":152,"column":0},"source":"index.js","original":{"line":187,"column":0}},{"generated":{"line":153,"column":0},"source":"index.js","original":{"line":188,"column":0}},{"generated":{"line":154,"column":0},"source":"index.js","original":{"line":189,"column":0}},{"generated":{"line":155,"column":0},"source":"index.js","original":{"line":190,"column":0}},{"generated":{"line":156,"column":0},"source":"index.js","original":{"line":191,"column":0}},{"generated":{"line":157,"column":0},"source":"index.js","original":{"line":192,"column":0}},{"generated":{"line":158,"column":0},"source":"index.js","original":{"line":193,"column":0}},{"generated":{"line":159,"column":0},"source":"index.js","original":{"line":194,"column":0}},{"generated":{"line":160,"column":0},"source":"index.js","original":{"line":195,"column":0}},{"generated":{"line":161,"column":0},"source":"index.js","original":{"line":196,"column":0}},{"generated":{"line":162,"column":0},"source":"index.js","original":{"line":197,"column":0}},{"generated":{"line":163,"column":0},"source":"index.js","original":{"line":198,"column":0}},{"generated":{"line":164,"column":0},"source":"index.js","original":{"line":199,"column":0}},{"generated":{"line":165,"column":0},"source":"index.js","original":{"line":201,"column":0}},{"generated":{"line":166,"column":0},"source":"index.js","original":{"line":202,"column":0}},{"generated":{"line":167,"column":0},"source":"index.js","original":{"line":203,"column":0}},{"generated":{"line":168,"column":0},"source":"index.js","original":{"line":204,"column":0}},{"generated":{"line":169,"column":0},"source":"index.js","original":{"line":205,"column":0}},{"generated":{"line":170,"column":0},"source":"index.js","original":{"line":206,"column":0}},{"generated":{"line":171,"column":0},"source":"index.js","original":{"line":207,"column":0}},{"generated":{"line":172,"column":0},"source":"index.js","original":{"line":208,"column":0}},{"generated":{"line":173,"column":0},"source":"index.js","original":{"line":209,"column":0}},{"generated":{"line":174,"column":0},"source":"index.js","original":{"line":210,"column":0}},{"generated":{"line":175,"column":0},"source":"index.js","original":{"line":212,"column":0}},{"generated":{"line":176,"column":0},"source":"index.js","original":{"line":214,"column":0}},{"generated":{"line":177,"column":0},"source":"index.js","original":{"line":215,"column":0}},{"generated":{"line":178,"column":0},"source":"index.js","original":{"line":216,"column":0}}],"sources":{"index.js":"// export class CannonHelper {\n//   constructor(worldObjects) {\n//     this.ShapeTypes = {\n//       SPHERE: 1,\n//       PLANE: 2,\n//       BOX: 4,\n//       COMPOUND: 8,\n//       CONVEXPOLYHEDRON: 16,\n//       HEIGHTFIELD: 32,\n//       PARTICLE: 64,\n//       CYLINDER: 128,\n//       TRIMESH: 256\n//     }\n\n//     // consts for stepping through time in the sim\n//     this.fixedTimeStep = 1.0 / 30.0 // seconds\n//     this.maxSubSteps = 3\n\n//     this.groundMaterial = new CANNON.Material()\n\n//     // pass them in at the beginning?\n//     this.worldObjects = worldObjects\n\n//     // Init our world\n//     this.world = new CANNON.World()\n\n//     // expose the original cannon object for static methods\n//     this.CANNON = CANNON\n\n//     // set the gravity\n//     this.world.gravity.set(0, -29.82, 0) // m/sÂ²\n\n//     // set up the initial objects\n//     this.worldObjects.forEach((worldObject, i) => {\n//       // attempt to boost performance by making sleeping more agressive\n//       // worldObject.physicsObject.sleepSpeedLimit = 1.0\n\n//       // add the body to the world\n//       // this.worldObjects[i].physicsObject = this.world.addBody(worldObject.physicsObject)\n//       this.world.addBody(worldObject.physicsObject)\n\n//       // save the transform for later\n//       // using getTransform everywhere seemed to have a performance hit\n//       worldObject.transform = worldObject.sceneObject.getTransform()\n\n//       // sync the scale initially so that everything matches\n//       this.syncScale(this.worldObjects[i].transform, this.worldObjects[i].physicsObject)\n\n//       // if (this.groundBody && this.worldObjects[i].physicsObject) {\n//       //   print('here')\n//       //   var contactMat = new CANNON.ContactMaterial(this.groundBody.material, worldObject.physicsObject.material, {\n//       //     friction: 0.0,\n//       //     restitution: 0.7\n//       //   })\n//       //   this.world.addContactMaterial(contactMat)\n//       // }\n//     })\n\n//     // TEST CONTACT MATERIAL\n//     // var contactMat = new CANNON.ContactMaterial(\n//     //   this.worldObjects[0].physicsObject.material,\n//     //   this.worldObjects[1].physicsObject.material,\n//     //   {\n//     //     friction: 0.0,\n//     //     restitution: 0.7\n//     //   }\n//     // )\n//     // this.world.addContactMaterial(contactMat)\n//   }\n\n//   bodyPos(cannonBody) {\n//     return new vec3(cannonBody.position.x, cannonBody.position.y, cannonBody.position.z)\n//   }\n\n//   // return the scale/size of a physics object\n//   // use for scaling a sceneObject to match the physics world\n//   bodyScale(cannonBody) {\n//     const shape = cannonBody.shapes[0]\n\n//     // // TODO: change to switch to support more shapes\n//     // if (shape.type == this.ShapeTypes.SPHERE) return new vec3(shape.radius, shape.radius, shape.radius)\n//     // // the plane type seems to have no size\n//     // else if (shape.type == this.ShapeTypes.PLANE) return new vec3(10, 10, 10)\n\n//     switch (shape.type) {\n//       case this.ShapeTypes.SPHERE:\n//         return new vec3(shape.radius, shape.radius, shape.radius)\n//         break\n//       case this.ShapeTypes.PLANE:\n//         return new vec3(10, 10, 10)\n//         break\n\n//       case this.ShapeTypes.BOX:\n//       default:\n//         const size = shape.halfExtents\n\n//         return new vec3(size.x / 8, size.y / 8, size.z / 8)\n//         break\n//     }\n//   }\n\n//   bodyRot(cannonBody) {\n//     var rot = cannonBody.quaternion\n//     transform.setWorldRotation(new quat(rot.w, rot.x, rot.y, rot.z))\n//   }\n\n//   addWorldObject(worldObject) {\n//     this.world.addBody(worldObject.physicsObject)\n\n//     worldObject.transform = worldObject.sceneObject.getTransform()\n\n//     // sync the scale initially so that everything matches\n//     this.worldObjects.push(worldObject)\n\n//     this.syncScale(worldObject.transform, worldObject.physicsObject)\n//   }\n\n//   syncPos(transform, cannonBody) {\n//     // var transform = sceneObject.getTransform()\n//     var newPos = this.bodyPos(cannonBody)\n//     transform.setWorldPosition(newPos)\n\n//     var rot = cannonBody.quaternion\n//     transform.setWorldRotation(new quat(rot.w, rot.x, rot.y, rot.z))\n//   }\n\n//   syncScale(transform, cannonBody) {\n//     // const transform = sceneObject.getTransform()\n//     const physicsSize = this.bodyScale(cannonBody)\n//     transform.setWorldScale(physicsSize)\n//   }\n\n//   update() {\n//     // step the sim, can just take fixed time\n//     // this.world.step(this.fixedTimeStep, getDeltaTime(), this.maxSubSteps)\n\n//     this.world.step(global.getDeltaTime())\n\n//     // for loop faster, really worth it?\n//     for (var i = 0; i < this.worldObjects.length; i++) {\n//       // const element = array[i];\n//       this.syncPos(this.worldObjects[i].transform, this.worldObjects[i].physicsObject)\n//     }\n//     // this.worldObjects.forEach(worldObject => {\n//     //   this.syncPos(worldObject.transform, worldObject.physicsObject)\n//     // })\n//   }\n\n//   // sync from snap -> cannon\n//   syncSceneObject(transform, cannonBody) {\n//     // var transform = sceneObject.getTransform()\n//     var pos = transform.getWorldPosition()\n//     var rot = transform.getWorldRotation()\n\n//     //   var newPlayerPos = new CANNON.Vec3(pos.x, pos.y, pos.z)\n\n//     // XXX: probably a pretty bad way of syncing\n//     // might be better to add velocity towards the desired point\n//     cannonBody.position.set(pos.x, pos.y, pos.z)\n//     cannonBody.quaternion.set(rot.x, rot.z, rot.y, rot.w)\n//     cannonBody.velocity = new CANNON.Vec3(0, 0, 0)\n//     cannonBody.torque = new CANNON.Vec3(0, 0, 0)\n//     // cannonBody.type = CANNON.Body.STATIC\n//     //   cannonBody.position.set(pos.x, pos.z * -1, pos.y)\n//   }\n\n//   static makeBox(size, position, rotation) {\n//     var mat = new CANNON.Material()\n\n//     return new CANNON.Body({\n//       mass: 1,\n//       position: new CANNON.Vec3(position.x, position.y, position.z),\n//       shape: new CANNON.Box(new CANNON.Vec3(size.x, size.y, size.z)),\n//       // if no rotation on W set something, seems to stall if nothing is set!\n//       quaternion: new CANNON.Quaternion(rotation.x, rotation.y, rotation.z, rotation.w || 0.5),\n//       // quaternion: new CANNON.Quaternion(rotation.x || 0.5, rotation.y || 0.5, rotation.z || 0.5, rotation.w || 0.5),\n//       material: mat\n//       // DYNAMIC: 1\n//       // fixedRotation: true\n//       // linearDamping: 0.1,\n//       // angularDamping: 0.5\n//     })\n//   }\n\n//   static makeSphere(size, position, rotation) {\n//     var mat = new CANNON.Material()\n//     return new CANNON.Body({\n//       mass: 1,\n//       // position: new CANNON.Vec3(0, 10, -10),\n//       // shape: new CANNON.Sphere(12)\n//       position: new CANNON.Vec3(position.x, position.y, position.z),\n//       shape: new CANNON.Sphere(size.x),\n//       material: mat\n//       // DYNAMIC: 1\n//       // fixedRotation: true\n//       // linearDamping: 0.1,\n//       // angularDamping: 0.5\n//     })\n//   }\n\n//   static makeFloor(size, position, rotation) {\n//     var mat = new CANNON.Material()\n//     // ground planes seem to be infinite in size...\n//     // var groundShape = new CANNON.Plane()\n//     const groundShape = new CANNON.Box(new CANNON.Vec3(1000, 1000, 1))\n//     var groundBody = new CANNON.Body({\n//       mass: 0, // mass == 0 makes the body static\n//       material: mat,\n//       shape: groundShape\n//     })\n\n//     groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n\n//     return groundBody\n//   }\n// }\n"},"lineCount":null}},"error":null,"hash":"ad9d63284feaa2a5f20c73a475810621","cacheData":{"env":{}}}