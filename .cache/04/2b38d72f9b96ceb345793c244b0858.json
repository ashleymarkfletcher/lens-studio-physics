{"id":"v3o/","dependencies":[{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/package.json","includedInParent":true,"mtime":1572035175430},{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/.babelrc","includedInParent":true,"mtime":1572035440174},{"name":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/package.json","includedInParent":true,"mtime":1571074066777},{"name":"../math/Vec3","loc":{"line":3,"column":19},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/SplitSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/math/Vec3.js"},{"name":"../math/Quaternion","loc":{"line":4,"column":25},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/SplitSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/math/Quaternion.js"},{"name":"./Solver","loc":{"line":5,"column":21},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/SplitSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/Solver.js"},{"name":"../objects/Body","loc":{"line":6,"column":19},"parent":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/solver/SplitSolver.js","resolved":"/Users/ashley/Documents/personal/JS/lens-studio-physics/node_modules/cannon/src/objects/Body.js"}],"generated":{"js":"module.exports = SplitSolver;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('./Solver');\nvar Body = require('../objects/Body');\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n * @class SplitSolver\n * @constructor\n * @extends Solver\n * @param {Solver} subsolver\n */\nfunction SplitSolver(subsolver){\n    Solver.call(this);\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = [];\n\n    // Create needed nodes, reuse if possible\n    while(this.nodePool.length < 128){\n        this.nodePool.push(this.createNode());\n    }\n}\nSplitSolver.prototype = new Solver();\n\n// Returns the number of subsystems\nvar SplitSolver_solve_nodes = []; // All allocated node objects\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\nvar SplitSolver_solve_eqs = [];   // Temp array\nvar SplitSolver_solve_bds = [];   // Temp array\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\n\nvar STATIC = Body.STATIC;\nfunction getUnvisitedNode(nodes){\n    var Nnodes = nodes.length;\n    for(var i=0; i!==Nnodes; i++){\n        var node = nodes[i];\n        if(!node.visited && !(node.body.type & STATIC)){\n            return node;\n        }\n    }\n    return false;\n}\n\nvar queue = [];\nfunction bfs(root,visitFunc,bds,eqs){\n    queue.push(root);\n    root.visited = true;\n    visitFunc(root,bds,eqs);\n    while(queue.length) {\n        var node = queue.pop();\n        // Loop over unvisited child nodes\n        var child;\n        while((child = getUnvisitedNode(node.children))) {\n            child.visited = true;\n            visitFunc(child,bds,eqs);\n            queue.push(child);\n        }\n    }\n}\n\nfunction visitFunc(node,bds,eqs){\n    bds.push(node.body);\n    var Neqs = node.eqs.length;\n    for(var i=0; i!==Neqs; i++){\n        var eq = node.eqs[i];\n        if(eqs.indexOf(eq) === -1){\n            eqs.push(eq);\n        }\n    }\n}\n\nSplitSolver.prototype.createNode = function(){\n    return { body:null, children:[], eqs:[], visited:false };\n};\n\n/**\n * Solve the subsystems\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSplitSolver.prototype.solve = function(dt,world){\n    var nodes=SplitSolver_solve_nodes,\n        nodePool=this.nodePool,\n        bodies=world.bodies,\n        equations=this.equations,\n        Neq=equations.length,\n        Nbodies=bodies.length,\n        subsolver=this.subsolver;\n\n    // Create needed nodes, reuse if possible\n    while(nodePool.length < Nbodies){\n        nodePool.push(this.createNode());\n    }\n    nodes.length = Nbodies;\n    for (var i = 0; i < Nbodies; i++) {\n        nodes[i] = nodePool[i];\n    }\n\n    // Reset node values\n    for(var i=0; i!==Nbodies; i++){\n        var node = nodes[i];\n        node.body = bodies[i];\n        node.children.length = 0;\n        node.eqs.length = 0;\n        node.visited = false;\n    }\n    for(var k=0; k!==Neq; k++){\n        var eq=equations[k],\n            i=bodies.indexOf(eq.bi),\n            j=bodies.indexOf(eq.bj),\n            ni=nodes[i],\n            nj=nodes[j];\n        ni.children.push(nj);\n        ni.eqs.push(eq);\n        nj.children.push(ni);\n        nj.eqs.push(eq);\n    }\n\n    var child, n=0, eqs=SplitSolver_solve_eqs;\n\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n\n    var dummyWorld = SplitSolver_solve_dummyWorld;\n    while((child = getUnvisitedNode(nodes))){\n        eqs.length = 0;\n        dummyWorld.bodies.length = 0;\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\n\n        var Neqs = eqs.length;\n\n        eqs = eqs.sort(sortById);\n\n        for(var i=0; i!==Neqs; i++){\n            subsolver.addEquation(eqs[i]);\n        }\n\n        var iter = subsolver.solve(dt,dummyWorld);\n        subsolver.removeAllEquations();\n        n++;\n    }\n\n    return n;\n};\n\nfunction sortById(a, b){\n    return b.id - a.id;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/cannon/src/solver/SplitSolver.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}}],"sources":{"../node_modules/cannon/src/solver/SplitSolver.js":"module.exports = SplitSolver;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('./Solver');\nvar Body = require('../objects/Body');\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n * @class SplitSolver\n * @constructor\n * @extends Solver\n * @param {Solver} subsolver\n */\nfunction SplitSolver(subsolver){\n    Solver.call(this);\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = [];\n\n    // Create needed nodes, reuse if possible\n    while(this.nodePool.length < 128){\n        this.nodePool.push(this.createNode());\n    }\n}\nSplitSolver.prototype = new Solver();\n\n// Returns the number of subsystems\nvar SplitSolver_solve_nodes = []; // All allocated node objects\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\nvar SplitSolver_solve_eqs = [];   // Temp array\nvar SplitSolver_solve_bds = [];   // Temp array\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\n\nvar STATIC = Body.STATIC;\nfunction getUnvisitedNode(nodes){\n    var Nnodes = nodes.length;\n    for(var i=0; i!==Nnodes; i++){\n        var node = nodes[i];\n        if(!node.visited && !(node.body.type & STATIC)){\n            return node;\n        }\n    }\n    return false;\n}\n\nvar queue = [];\nfunction bfs(root,visitFunc,bds,eqs){\n    queue.push(root);\n    root.visited = true;\n    visitFunc(root,bds,eqs);\n    while(queue.length) {\n        var node = queue.pop();\n        // Loop over unvisited child nodes\n        var child;\n        while((child = getUnvisitedNode(node.children))) {\n            child.visited = true;\n            visitFunc(child,bds,eqs);\n            queue.push(child);\n        }\n    }\n}\n\nfunction visitFunc(node,bds,eqs){\n    bds.push(node.body);\n    var Neqs = node.eqs.length;\n    for(var i=0; i!==Neqs; i++){\n        var eq = node.eqs[i];\n        if(eqs.indexOf(eq) === -1){\n            eqs.push(eq);\n        }\n    }\n}\n\nSplitSolver.prototype.createNode = function(){\n    return { body:null, children:[], eqs:[], visited:false };\n};\n\n/**\n * Solve the subsystems\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSplitSolver.prototype.solve = function(dt,world){\n    var nodes=SplitSolver_solve_nodes,\n        nodePool=this.nodePool,\n        bodies=world.bodies,\n        equations=this.equations,\n        Neq=equations.length,\n        Nbodies=bodies.length,\n        subsolver=this.subsolver;\n\n    // Create needed nodes, reuse if possible\n    while(nodePool.length < Nbodies){\n        nodePool.push(this.createNode());\n    }\n    nodes.length = Nbodies;\n    for (var i = 0; i < Nbodies; i++) {\n        nodes[i] = nodePool[i];\n    }\n\n    // Reset node values\n    for(var i=0; i!==Nbodies; i++){\n        var node = nodes[i];\n        node.body = bodies[i];\n        node.children.length = 0;\n        node.eqs.length = 0;\n        node.visited = false;\n    }\n    for(var k=0; k!==Neq; k++){\n        var eq=equations[k],\n            i=bodies.indexOf(eq.bi),\n            j=bodies.indexOf(eq.bj),\n            ni=nodes[i],\n            nj=nodes[j];\n        ni.children.push(nj);\n        ni.eqs.push(eq);\n        nj.children.push(ni);\n        nj.eqs.push(eq);\n    }\n\n    var child, n=0, eqs=SplitSolver_solve_eqs;\n\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n\n    var dummyWorld = SplitSolver_solve_dummyWorld;\n    while((child = getUnvisitedNode(nodes))){\n        eqs.length = 0;\n        dummyWorld.bodies.length = 0;\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\n\n        var Neqs = eqs.length;\n\n        eqs = eqs.sort(sortById);\n\n        for(var i=0; i!==Neqs; i++){\n            subsolver.addEquation(eqs[i]);\n        }\n\n        var iter = subsolver.solve(dt,dummyWorld);\n        subsolver.removeAllEquations();\n        n++;\n    }\n\n    return n;\n};\n\nfunction sortById(a, b){\n    return b.id - a.id;\n}"},"lineCount":154}},"error":null,"hash":"565f4fecc3b2eb9f4207ffd3b353502c","cacheData":{"env":{}}}